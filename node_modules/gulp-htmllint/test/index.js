'use strict';

var expect = require('chai').expect,
	File = require('vinyl');

describe('gulp-htmllint', function() {
	var htmllint = require('../');

	it('should be a function', function() {
		expect(htmllint).to.be.an.instanceOf(Function);
	});

	it('should return an object', function() {
		var result = htmllint();

		expect(result).to.be.an.instanceOf(Object);
	});

	it('should provide an HTMLLint result', function() {
		var lintStream = htmllint({
			'failOnError': true,
			'rules': {
				'attr-no-dup': true,
				'line-end-style': false
			}
		}, function() {});

		lintStream.on('data', function(result) {
			expect(result.htmllint.issues).to.have.lengthOf(3);
			expect(['a']).to.have.lengthOf(3);

			// done();
		});

		lintStream.write(new File({
			'path': 'test/fixtures/invalid-1.html',
			'contents': new Buffer('<div class="a" class="b">Foo</div>')
		}));

		lintStream.end();
	});
});
